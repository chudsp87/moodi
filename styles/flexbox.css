.flex-container {
  display: flex;
  background-color: DodgerBlue;
  /* height: */
  /* width: */

  /* flex-direction: row (default) | row reverse | column | column reverse */
  flex-direction: row;
  /*The flex-wrap property specifies whether the flex items should wrap or not.*/
  /* flex-wrap: wrap | no wrap (default) | wrap-reverse */
  flex-wrap: wrap;
  /* The justify-content property is used to align the flex items: */
  /* justify-content:  flex-start (default) | center | flex-end | space-around | space-between */
  justify-content: center;
  /* The align-items property is used to align the flex items. */
  /* align-items: flex-start | flex-end | center | stretch (default - fills container) | baseline */
  align-items: center;
  /* align-content:(same opts as above) */
  align-content: space-around;

  /* for perfect centering: set justify-content: center and align-items: center */

}

.flex-container > div {
  background-color: #f1f1f1;
  margin: 10px;
  padding: 20px;
  font-size: 30px;
}

.flex-item {
  /*
    order
    flex-grow
    flex-shrink
    flex-basis
    flex
    align-self
  */
  /* order The order property specifies the order of the flex items. Default 0*/
  /* The flex-grow property specifies how much a flex item will grow relative to the rest of the flex items. A number */
  /*  <div class="flex-container">
        <div style="flex-grow: 1">1</div>
        <div style="flex-grow: 1">2</div>
        <div style="flex-grow: 8">3</div>
      </div> 
  */

  /* The flex-shrink property specifies how much a flex item will shrink relative to the rest of the flex items. Defaul = 1 */
  /* 
   <div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div style="flex-shrink: 0">3</div>
  <div>4</div>
  <div>5</div>
  <div>6</div>
  <div>7</div>
  <div>8</div>
  <div>9</div>
  <div>10</div>
</div> 
*/

/* The flex-basis property specifies the initial length of a flex item. */
/* 
 <div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div style="flex-basis: 200px">3</div>
  <div>4</div>
</div> 
*/

/* The align-self property specifies the alignment for the selected item inside the flexible container. */
/* The align-self property overrides the default alignment set by the container's align-items property. */
/* 

<div class="flex-container">
  <div>1</div>
  <div style="align-self: flex-start">2</div>
  <div style="align-self: flex-end">3</div>
  <div>4</div>
</div> 
*/


}